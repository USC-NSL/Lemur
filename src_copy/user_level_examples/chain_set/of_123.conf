
/* 
* Title: totalList.conf
* Description: chain #5 is the complex chain example.
*/

flow traffic_1 = [{'dst_ip' : '1.0.1.3', {'src_ip' : '1.0.1.1', 'src_ip' : '1.0.1.3'}}, {'dst_ip' : '1.0.1.4'}]
flow traffic_2 = [{'dst_ip' : '1.0.1.9'}]
flow traffic_3 = [{'dst_ip' : '1.0.1.8'}]


func bpf1 = BPF()
func bpf2 = BPF()
func vlan0 = VLANPop()

chain sp_2 = ACL(argu1)->TrafficShaper()-> bpf2 -> [{'flowspec':[{'dst_ip':'1.0.1.64'}], 'nfchain': UrlFilter()}, {'flowspec':[{'dst_ip':'1.0.1.128'}], 'nfchain': ''}]
chain sp_1 = bpf1 -> [{'flowspec':[{'dst_ip':'1.0.1.64', 'dst_ip':'1.0.1.128'}], 'nfchain': sp_2}, {'flowspec':[{'dst_ip':'1.0.1.0'}], 'nfchain': ''}] -> vlan0 -> EVPAESCBC() -> IPv4Forward()

chain sp_3 = EVPAESCBC() -> BPF() -> [ {'flowspec':[{'dst_ip': '1.0.1.7'}], 'nfchain' : NAT()}, {'flowspec':[{'dst_ip': '1.0.1.8'}], 'nfchain': NAT()}, {'flowspec':[{'dst_ip': '1.0.1.9'}], 'nfchain': NAT()}] -> IPv4Forward()

argu1 = "rules=[{'src_ip': '10.0.0.8/16', 'drop': False}]"
argu2 = "rules=[{'src_ip': '10.0.0.20/16', 'drop': False}]"

chain main = DEDUP() -> ACL(argu2) -> TrafficShaper -> SilkRoad -> IPv4Forward



traffic_1 : sp_1
traffic_2 : sp_3
traffic_3 : main

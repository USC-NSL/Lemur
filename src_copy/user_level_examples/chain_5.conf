
/* 
* Title: chain_5.conf
* Description: chain #5 is the complex chain example.
*/

flow traffic_1 = [{'dst_ip' : '1.0.1.3', {'src_ip' : '1.0.1.1', 'src_ip' : '1.0.1.3'}}, {'dst_ip' : '1.0.1.4'}]
flow traffic_2 = [{'dst_ip' : '1.0.1.9'}, {'src_ip' : '1.0.1.1'}]
flow traffic_3 = [{'dst_ip' : '1.0.1.8'}, {'src_ip' : '1.0.1.1'}]
flow traffic_4 = [{'dst_ip' : '1.0.1.5'}, {'dst_ip' : '1.0.1.6'}, {'dst_ip' : '1.0.1.7'}]

func bpf1 = BPF()
func bpf2 = BPF()
func vlan0 = VLANPop()

chain sp_2 = ACL()->TrafficShaper()-> bpf2 -> [{'flowspec':[{'src_ip':'10.0.0.1'}], 'nfchain': UrlFilter()}, {'flowspec':[{'dst_ip':'10.0.0.2'}], 'nfchain': ''}]
chain sp_1 = bpf1 -> [{'flowspec':[{'src_ip':'10.0.0.3'}], 'nfchain': sp_2}, {'flowspec':[{'src_ip':'10.0.0.4'}], 'nfchain': ''}] -> vlan0 -> EVPAESCBC() -> IPv4Forward()

chain sp_3 = EVPAESCBC()->BPF() -> [ {'flowspec':[{'src_ip': '1.0.1.7'}], 'nfchain' : NAT()}, {'flowspec':[{'src_ip': '1.0.1.8'}], 'nfchain': NAT()}, {'flowspec':[{'dst_ip': '1.0.1.9'}], 'nfchain': NAT()}]  -> IPv4Forward()

argu1 = "rules=[{'src_ip': '10.0.0.8/16', 'drop': False}]"
argu2 = "rules=[{'src_ip': '10.0.0.10/16', 'drop': False}]"

chain main = DEDUP() -> ACL(argu1) -> TrafficShaper -> SilkRoad -> IPv4Forward

chain sub1 = SilkRoad() -> TrafficShaper() -> ACL()
chain sub2 = SilkRoad() -> TrafficShaper() -> ACL()
chain sub3 = SilkRoad() -> TrafficShaper() -> ACL()
chain sp_4 = DEDUP() -> ACL(argu2) -> Measure() -> VLANPush() -> HashLB() -> [{'flowspec':[{'src_ip': '1.0.1.10'}], 'nfchain': sub1}, {'flowspec':[{'src_ip': '1.0.1.11'}], 'nfchain': sub2}, {'flowspec':[{'dst_ip': '1.0.1.12'}], 'nfchain': sub3} ] -> IPv4Forward()

traffic_1 : sp_1
traffic_2 : sp_3
traffic_3 : main
traffic_4: sp_4

############################################################
# PFILTER.LIB
# This is the packet filter module implementation for P4 switch.
# You can match MAC, IP, TCP fields easily.
# You can also define your own header and implement the corresponding
# actions to get what you want.
#
############################################################

default_prefix = pfilter

add macro(PFILTER_TABLE_SIZE, 50)
add macro(TYPE_IPV4, 0x0800)
add macro(TYPE_TCP, 0x06)
add macro(TYPE_UDP, 0x11)

/*
 * Header Definition Part
 */

#define Ethernet
#define IPv4
#define TCP
#define UDP

/* Metadata Definition Part
 *
 */

add metadata(gate_select, 4)


/*
 * P4 Header Parser Specification Part
 */

set Ethernet(etherType, 1, {TYPE_IPV4:IPv4})
set IPv4(protocol, 2, {TYPE_TCP:TCP, TYPE_UDP:UDP})
set TCP(None, 0, {})
set UDP(None, 0, {})
add parser( Ethernet )

# MyIngress

action pfilter_table_hit(gate) {
    modify_field(meta.gate_select, gate);
}

action pfilter_table_miss() {
    modify_field(meta.drop_flag, 1);
}

table pfilter_table {
	reads {
		ipv4.srcAddr: ternary;
		ipv4.dstAddr: ternary;
		tcp.srcPort: ternary;
		tcp.dstPort: ternary;
	}
	actions {
		pfilter_table_hit;
		pfilter_table_miss;
	}
	default_action : pfilter_table_miss();
	size : PFILTER_TABLE_SIZE;
}

apply {
	apply(pfilter_table);
}

# MyEgress


/*
 * P4 Header Deparser Specification Part (Done)
 */

deparser_seq = [IPv4, Ethernet]
add deparser( deparser_seq )


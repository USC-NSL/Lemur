#
# Title: basic.lib
# This P4 module implements a basic forwarding function.
# It matches on the destination IPv4 address, and sets up the next-hop
# Ethernet address and the egress switch port.
#

default_prefix = "basic"

/*
 * Header Definition Part
 */
#define Ethernet
#define IPv4

/*
 * Metadata Definition Part
 */
add metadata()
add metadata(dstAddr, ip4Addr_t)
add metadata(cpu_copy, bit<8>)

/*
 * P4 Header Parser Specification Part
 */
set Ethernet(etherType, 1, {TYPE_IPV4:IPv4})
set IPv4(None, 0, {})
add parser( Ethernet )


/*
 * Ingress Match/Action Table Part
 */
action _drop() {
	drop();
}

action swap_mac(inout bit<48> src, inout bit<48> dst) {
	bit<48> tmp = src;
	src = dst;
	dst = tmp;
} 

action ipv4_forward(macAddr_t dstAddr, egressSpec_t port) {
	modify_field(ethernet.srcAddr, ethernet.srcAddr);
	modify_field(ethernet.dstAddr, dstAddr);
	modify_field(standard_metadata.egress_spec, port);
	add_to_field(ipv4.ttl, -1);
}

table ipv4_lpm {
        reads {
            hdr.ipv4.dstAddr: lpm;
        }
        actions{
            ipv4_forward;
            _drop;
        }
        size = 1024;
}

apply {
	if (valid(ipv4))	{
		apply(ipv4_lpm);
	}
}

/*
 * Egress Match/Action Table Part (default)
 */


/*
 * P4 Header Deparser Specification Part
 */
deparser_seq = [IPv4, Ethernet]
add deparser( deparser_seq )

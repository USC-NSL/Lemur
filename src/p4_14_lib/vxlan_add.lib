#
# Title: vxlan_add.lib
# This P4 module is to add a vxlan header on top of original Ethernet
# frame. VXLAN is commonly used to tunnel the traffic at VLAN Tunnel
# Endpoint (VTEP).
# This implementation adds outer ethernet, outer ipv4, outer udp and
# vxlan. You can assign VTEP source and destination MAC address.
#

default_prefix = vxlan_add

/*
 * P4 module marcos
 */
add macro(ETHERTYPE_IPV4, 0x0800)
add macro(ETHERTYPE_VLAN, 0x8100)
add macro(VTEP, 0xffffffffffff)
add macro(IP_PROT_TCP, 0x06)
add macro(IP_PROT_UDP, 0x11)
add macro(VXLAN_PORT, 4789)

/*
 * Header Definition Part
 */
#define Ethernet
#define VXLAN
#define IPv4
#define UDP
#define TCP

/* Metadata Definition Part
 *
 */


/*
 * P4 Header Parser Specification Part
 */
set Ethernet(dstAddr, 2, {VTEP:Inner_IPv4, DEFAULT: Ipv4})
set Inner_IPv4(protocol, 1, {IP_PROT_TCP: TCP})
set TCP(None, 0, {})
set IPv4(protocol, 1, {IP_PROT_UDP: UDP})
set UDP(dstPort, 1, {VXLAN_PORT: Vxlan})
set Vxlan(None, 1, {Inner_ethernet})
set Inner_ethernet(etherType, 1, {ETHERTYPE_IPV4: Inner_IPv4})
add parser( Ethernet )

# MyIngress

action do_VXLAN_encap(vni, srcPort, vte_ip_srcAddr, vte_ip_dstAddr, vte_srcAddr, vte_dstAddr) {
    add_header(inner_ethernet);
    modify_field(inner_ethernet.srcAddr, ethernet.srcAddr);
    modify_field(inner_ethernet.dstAddr, ethernet.dstAddr);
    modify_field(inner_ethernet.etherType, ethernet.etherType);
    add_header(vxlan);
    add_header(udp);
    add_header(ipv4);
    modify_field(vxlan.vni, vni);
    modify_field(udp.srcPort, srcPort);
    modify_field(udp.dstPort, VXLAN_PORT);
    modify_field(ipv4.protocol, IP_PROT_UDP);
    modify_field(ipv4.srcAddr, vte_ip_srcAddr);
    modify_field(ipv4.dstAddr, vte_ip_dstAddr);
    modify_field(ethernet.srcAddr, vte_srcAddr);
    modify_field(ethernet.dstAddr, vte_dstAddr);
    modify_field(ethernet.etherType, ETHERTYPE_IPV4);
}

table add_vxlan {
	actions {
		do_VXLAN_encap;
	}
}

action init_metadata() {
}

apply {
	// First, we need to initialize the metadata field
	init_metadata();

	// Second, modify the packet header fields/metadata fields according to our needs
    if(ethernet.dstAddr == VTEP){
	    apply(add_vxlan);
    }

}

# MyEgress


/*
 * P4 Header Deparser Specification Part
 */
deparser_seq = [Inner_Ipv4, Inner_ethernet, VXLAN, UDP, IPV4, Ethernet]
add deparser( deparser_seq )

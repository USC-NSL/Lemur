
/* The NFCP library for the basic forwarding module
 *
 * NFCP libraries are created by the NFCP developers.
 * Details should not be exposed to the NFCP users.
 * The NFCP users should call "basic" module in order to use the load balancer.
 * Author: Jianfeng
 * Timestamp: Jan. 1st, 2018
 */

default_prefix = "basic"


/*
 * Header Definition Part (Done)
 */

#define Ethernet
#define IPv4


/*
 * Metadata Definition Part (Done)
 */
add metadata()
add metadata(dstAddr, ip4Addr_t)
add metadata(cpu_copy, bit<8>)


/*
 * P4 Header Parser Specification Part (Done)
 */

set Ethernet(etherType, 1, {TYPE_IPV4:IPv4})
set IPv4(None, 0, {})
add parser( Ethernet )


/*
 * Ingress Match/Action Table Part (not finished yet)
 */

action drop() {
	mark_to_drop();
}

action swap_mac(inout bit<48> src, inout bit<48> dst) {
	bit<48> tmp = src;
	src = dst;
	dst = tmp;
} 

action ipv4_forward(macAddr_t dstAddr, egressSpec_t port) {
	hdr.ethernet.srcAddr = hdr.ethernet.srcAddr;
	hdr.ethernet.dstAddr = dstAddr;
	standard_metadata.egress_spec = port;
	hdr.ipv4.ttl = hdr.ipv4.ttl - 1;
}

table ipv4_lpm {
        key = {
            hdr.ipv4.dstAddr: lpm;
        }
        actions = {
            ipv4_forward;
            drop;
            NoAction;
        }
        size = 1024;
        default_action = NoAction();
}

apply {
	if (hdr.ipv4.isValid())	{
		ipv4_lpm.apply();
	}
}


/*
 * Egress Match/Action Table Part (default)
 */




/*
 * P4 Header Deparser Specification Part (Done)
 */

deparser_seq = [IPv4, Ethernet]
add deparser( deparser_seq )
